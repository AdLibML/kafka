# ─── 1) Namespace for Kafka
apiVersion: v1
kind: Namespace
metadata:
  name: kafka

---
# ─── 2) PersistentVolumeClaims for Kafka data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka1-data
  namespace: kafka
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka2-data
  namespace: kafka
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka3-data
  namespace: kafka
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
# ─── 3) Kafka Broker 1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka1
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka1
  template:
    metadata:
      labels:
        app: kafka1
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:8.0.0
          ports:
            - containerPort: 9092
            - containerPort: 9093
          env:
            - name: CLUSTER_ID
              value: "MkU3OEVBNTcwNTJENDM2Qk"
            - name: KAFKA_CLUSTER_ID
              value: "MkU3OEVBNTcwNTJENDM2Qk"
            - name: KAFKA_NODE_ID
              value: "1"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@kafka1:9093,2@kafka2:9093,3@kafka3:9093"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka1:9092,CONTROLLER://kafka1:9093"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_LOG_DIRS
              value: "/var/lib/kafka/data"
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
      volumes:
        - name: kafka-data
          emptyDir: {}

---
# ─── 4) Kafka Broker 2
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka2
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka2
  template:
    metadata:
      labels:
        app: kafka2
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:8.0.0
          ports:
            - containerPort: 9092
            - containerPort: 9093
          env:
            - name: CLUSTER_ID
              value: "MkU3OEVBNTcwNTJENDM2Qk"
            - name: KAFKA_CLUSTER_ID
              value: "MkU3OEVBNTcwNTJENDM2Qk"
            - name: KAFKA_NODE_ID
              value: "2"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@kafka1:9093,2@kafka2:9093,3@kafka3:9093"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka2:9092,CONTROLLER://kafka2:9093"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_LOG_DIRS
              value: "/var/lib/kafka/data"
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
      volumes:
        - name: kafka-data
          emptyDir: {}

---
# ─── 5) Kafka Broker 3
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka3
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka3
  template:
    metadata:
      labels:
        app: kafka3
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:8.0.0
          ports:
            - containerPort: 9092
            - containerPort: 9093
          env:
            - name: CLUSTER_ID
              value: "MkU3OEVBNTcwNTJENDM2Qk"
            - name: KAFKA_CLUSTER_ID
              value: "MkU3OEVBNTcwNTJENDM2Qk"
            - name: KAFKA_NODE_ID
              value: "3"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@kafka1:9093,2@kafka2:9093,3@kafka3:9093"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka3:9092,CONTROLLER://kafka3:9093"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_LOG_DIRS
              value: "/var/lib/kafka/data"
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
      volumes:
        - name: kafka-data
          emptyDir: {}

---
# ─── 6) Kafka Services
apiVersion: v1
kind: Service
metadata:
  name: kafka1
  namespace: kafka
spec:
  selector:
    app: kafka1
  ports:
    - name: plaintext
      port: 9092
      targetPort: 9092
    - name: controller
      port: 9093
      targetPort: 9093

---
apiVersion: v1
kind: Service
metadata:
  name: kafka2
  namespace: kafka
spec:
  selector:
    app: kafka2
  ports:
    - name: plaintext
      port: 9092
      targetPort: 9092
    - name: controller
      port: 9093
      targetPort: 9093

---
apiVersion: v1
kind: Service
metadata:
  name: kafka3
  namespace: kafka
spec:
  selector:
    app: kafka3
  ports:
    - name: plaintext
      port: 9092
      targetPort: 9092
    - name: controller
      port: 9093
      targetPort: 9093

---
# ─── 7) Kafka UI
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
        - name: kafka-ui
          image: provectuslabs/kafka-ui:latest
          ports:
            - containerPort: 8080
          env:
            - name: KAFKA_CLUSTERS_0_NAME
              value: "local-cluster"
            - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
              value: "kafka1:9092,kafka2:9092,kafka3:9092"
            - name: KAFKA_CLUSTERS_0_JMXPORT
              value: "19092"

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui
  namespace: kafka
spec:
  type: NodePort
  selector:
    app: kafka-ui
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30080

---
# ─── 8) Order API
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-api
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-api
  template:
    metadata:
      labels:
        app: order-api
    spec:
      containers:
        - name: order-api
          image: kafka-order-api:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8000
          env:
            - name: BOOTSTRAP_SERVERS
              value: "kafka1:9092,kafka2:9092,kafka3:9092"

---
apiVersion: v1
kind: Service
metadata:
  name: order-api
  namespace: kafka
spec:
  type: NodePort
  selector:
    app: order-api
  ports:
    - port: 8000
      targetPort: 8000
      nodePort: 30081

---
# ─── 9) Processor API
apiVersion: apps/v1
kind: Deployment
metadata:
  name: processor-api
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: processor-api
  template:
    metadata:
      labels:
        app: processor-api
    spec:
      containers:
        - name: processor-api
          image: kafka-processor-api:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8001
          env:
            - name: BOOTSTRAP_SERVERS
              value: "kafka1:9092,kafka2:9092,kafka3:9092"

---
apiVersion: v1
kind: Service
metadata:
  name: processor-api
  namespace: kafka
spec:
  type: NodePort
  selector:
    app: processor-api
  ports:
    - port: 8001
      targetPort: 8001
      nodePort: 30082
